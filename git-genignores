#!/usr/bin/env ruby

require 'net/http'
require 'optparse'


class Server
  def initialize(url, prefix, suffix)
    @url = url
    @prefix = prefix
    @suffix = suffix
  end

  def print_ignores(filetypes)
    Net::HTTP.start(@url, 443, :use_ssl => true) do |http|
      filetypes.each do |ft|
        res = http.request_get "/#{ @prefix + ft + @suffix }"
        if res.kind_of? Net::HTTPSuccess
          puts make_header(ft)
          puts res.body
          puts make_footer(ft)
        else
          $stderr.puts "Cannot find the gitignore for #{ft}."
        end
      end
    end
  end

  def check_exists(filetypes)
    Net::HTTP.start(@url, 443, :use_ssl => true) do |http|
      filetypes.each do |ft|
        res = http.request_head "/#{ @prefix + ft + @suffix }"
        if res.kind_of? Net::HTTPSuccess
          $stdout.puts "Found gitignore for #{ft}."
        else
          $stdout.puts "Cannot find the gitignore file for #{ft}."
        end
      end
    end
  end

  def make_header(filetype)
    fence = "#" + "-" * 71
    "#{fence}\n# #{filetype.capitalize}\n#{fence}\n"
  end

  def make_footer(filetype)
    ""
  end
end

options = Hash.new
OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [options] LANGUAGE"

  opts.on("-l", "--list",
          "Check whether the server has that particular gitignore file. ") do
    options[:list] = true
  end
end.parse!

server = "raw.githubusercontent.com"
prefix = "github/gitignore/master/"
suffix = ".gitignore"
args = ARGV.map { |arg| arg.capitalize }

github = Server.new server, prefix, suffix

func = options[:list] ? :check_exists : :print_ignores
github.send func, args
